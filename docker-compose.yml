version: "3"
services:
    app:
        build:
            context: .
        ports:
            - "8000:8000"
        volumes:
            - ./:/app
        command: >
          sh -c "python manage.py wait_for_db &&
                 python manage.py migrate &&
                 python manage.py create_employee &&
                 python manage.py runserver 0.0.0.0:8000"
        env_file:
            - .env
        depends_on:
            - db
        restart: always
    db:
        image: "postgres"
        container_name: db_service
        env_file:
            - .env
        ports:
            - "5433:5432"
        volumes:
            - db_data:/var/lib/postgresql/data/
        restart: always
    redis:
        image: redis
        container_name: redis_service
        ports:
            - "6379:6379"
        restart: always
    celery:
        build:
            context: .
        container_name: celery_worker_service
        volumes:
            - ./:/app
        entrypoint: celery
        command:
            -A config.celery.app worker -l info
        env_file:
            - .env
        links:
            - redis
        depends_on:
            - redis
            - app
        restart: always
    celery_beat:
        build:
            context: .
        volumes:
            - ./:/app
        entrypoint: celery
        command:
            -A config.celery.app beat -l info
        env_file:
            - .env
        depends_on:
            - redis
            - app
        restart: always
volumes:
    db_data:
        driver: local
